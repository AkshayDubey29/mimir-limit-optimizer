# Simple Dockerfile using existing binary
FROM gcr.io/distroless/static:nonroot

# Build arguments for labels
ARG VERSION=dev
ARG COMMIT=unknown
ARG BUILD_DATE=unknown

# OCI Labels for metadata
LABEL org.opencontainers.image.title="Mimir Limit Optimizer"
LABEL org.opencontainers.image.description="Enterprise-grade Kubernetes controller for managing per-tenant limits in Grafana Mimir"
LABEL org.opencontainers.image.url="https://github.com/AkshayDubey29/mimir-limit-optimizer"
LABEL org.opencontainers.image.source="https://github.com/AkshayDubey29/mimir-limit-optimizer"
LABEL org.opencontainers.image.version="${VERSION}"
LABEL org.opencontainers.image.revision="${COMMIT}"
LABEL org.opencontainers.image.created="${BUILD_DATE}"
LABEL org.opencontainers.image.licenses="Apache-2.0"
LABEL org.opencontainers.image.vendor="Akshay Dubey"
LABEL org.opencontainers.image.authors="Akshay Dubey <akshay@example.com>"

# Copy the working binary with proper permissions
COPY --chmod=755 mimir-limit-optimizer /usr/local/bin/mimir-limit-optimizer

# Copy the built UI assets
COPY ui/build /app/ui/build

# Use non-root user
USER 65534:65534

# Set working directory
WORKDIR /

# Environment variables for runtime configuration
ENV TZ=UTC
ENV GOGC=50
ENV GOMAXPROCS=2

# Expose metrics port and UI port
EXPOSE 8080 8082

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD ["/usr/local/bin/mimir-limit-optimizer", "--health-check"]

# Set entrypoint
ENTRYPOINT ["/usr/local/bin/mimir-limit-optimizer"] 