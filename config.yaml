# Mimir Limit Optimizer Configuration - REAL DATA MODE (Standalone)
mode: dry-run
bufferPercentage: 20.0
updateInterval: 30s  # Faster updates for responsive dashboard

# Mimir cluster configuration
mimir:
  namespace: mimir
  configMapName: mimir-runtime-overrides
  triggerRollout: false
  rolloutComponents:
    - ingester
    - querier
    - query-frontend

# Fallback metrics endpoint (configure to point to your actual Mimir/Prometheus instance)
# Example endpoints - replace with your actual Mimir/Prometheus URL:
# metricsEndpoint: "http://prometheus-server:9090/api/v1/query"
# metricsEndpoint: "http://mimir-query-frontend:8080/prometheus/api/v1/query"
# metricsEndpoint: "http://localhost:9090/api/v1/query"
metricsEndpoint: "http://prometheus-server:9090/api/v1/query"

# Tenant scoping
tenantScoping:
  skipList: []
  includeList: []
  useRegex: false

# Metrics discovery - DISABLED for standalone mode
metricsDiscovery:
  enabled: false  # Disabled to avoid Kubernetes dependency
  namespace: mimir
  serviceLabelSelector: "app.kubernetes.io/name=mimir"
  serviceNames:
    - mimir-distributor
    - mimir-ingester
    - mimir-querier
    - mimir-query-frontend
    - mimir-query-scheduler
    - mimir-compactor
    - mimir-store-gateway
    - mimir-ruler
  metricsPath: "/metrics"
  portName: "http-metrics"
  port: 8080
  
  # Tenant discovery from real sources
  tenantDiscovery:
    # Configure real tenant names here (replace with your actual tenants)
    fallbackTenants:
      - "production-api"
      - "staging-env"
      - "development-cluster"
      - "monitoring-stack"
      - "user-analytics"
      - "metrics-ingestion"
      - "alerting-system"
      - "log-aggregation"
      - "webapp-frontend"
      - "backend-services"
      - "database-metrics"
      - "cache-layer"
      - "message-queue"
      - "auth-service"
      - "notification-service"
      - "file-storage"
      - "search-engine"
      - "recommendation-engine"
      - "payment-processor"
      - "audit-logging"
    
    # ConfigMap names to search for tenant configurations
    configMapNames:
      - "mimir-runtime-overrides"
      - "overrides"
      - "runtime-config"
    
    # Disable synthetic tenant generation
    enableSynthetic: false
    syntheticCount: 0
    
    # Configure for multi-tenant Mimir (set your tenant ID)
    metricsTenantID: ""
    
    # Additional tenant headers if needed
    tenantHeaders: {}

# Dynamic limits configuration
dynamicLimits:
  enabled: true
  defaultBuffer: 20.0
  autoDetect: true

# Cost control - optimized for performance
costControl:
  enabled: false  # Disabled for better performance in standalone mode
  costMethod: composite
  costPerUnit: 0.001

# Circuit breaker for protection
circuitBreaker:
  enabled: false  # Disabled in dry-run mode
  runtimeEnabled: false
  mode: auto

# Health scanner configuration - DISABLED for standalone mode
healthScanner:
  enabled: false  # Disabled to avoid Kubernetes dependency
  timeout: 60s    # Overall scan timeout
  resourceTimeouts:
    secrets: 10s
    deployments: 15s
    pods: 20s
    services: 10s
    configmaps: 10s

# Audit logging - optimized settings
auditLog:
  enabled: true
  storageType: "memory"  # Memory storage for faster operations
  maxEntries: 1000       # Reduced for better performance
  configMapName: "mimir-limit-optimizer-audit"
  
  # Fast retention policies
  retention:
    retentionPeriod: "72h"        # 3 days
    maxEntries: 1000              
    maxSizeBytes: 409600          # 400KB for faster operations
    cleanupInterval: "30m"        # Cleanup every 30 minutes
    cleanupBatchSize: 50          
    emergencyThresholdPercent: 90.0

# Web UI configuration - performance optimized
ui:
  enabled: true
  port: 8082

# Disable synthetic data generation (KEY CHANGE)
synthetic:
  enabled: false  # DISABLED - Use real data only
  tenantCount: 0  # Not used when disabled 